---
name: "Update flake.lock"
on:
  schedule:
    - cron: "0 0 1 * *"
  workflow_dispatch:
jobs:
  pre-job:
    continue-on-error: true
    runs-on: ubuntu-latest
    outputs:
      number: ${{ steps.skip_check.outputs.number }}
    steps:
      - uses: actions/checkout@v4
      - id: skip_check
        run: |
          echo "number=$(gh pr list --label flake-lock-update --state open --json id | jq 'length')" >> "$GITHUB_OUTPUT"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  update:
    runs-on: ubuntu-latest
    needs: pre-job
    if: needs.pre-job.outputs.number == '0'
    steps:
      - uses: actions/checkout@v4
        with:
          ssh-key: ${{ secrets.FOLLOW_NIXPKGS_PRIVATE_KEY }}
          ref: main
      - uses: ./.github/actions/setup-nix
        with:
          cachixToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
      - run: |
          git config user.name 'github-actions[bot]'
          git config user.email 'github-actions[bot]@users.noreply.github.com'
      - run: nix flake update --commit-lock-file
      - name: Get Date
        id: date
        run: echo "date=$(date +'%Y-%m-%d')" >> "$GITHUB_OUTPUT"
      - name: Create Pull Request
        id: cpr
        uses: peter-evans/create-pull-request@v7
        with:
          title: Update flake.lock ${{ steps.date.outputs.date }}
          labels: flake-lock-update
          branch: ci/flake-update
      - name: Enable automerge
        if: steps.cpr.outputs.pull-request-number
        run: gh pr merge --squash --auto "${{ steps.cpr.outputs.pull-request-number }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
