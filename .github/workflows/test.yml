name: "Test"
on:
  pull_request:
  push:
jobs:
  pre-job:
    continue-on-error: true
    runs-on: ubuntu-latest
    outputs:
      should_skip: ${{ steps.skip_check.outputs.should_skip }}
    steps:
      - id: skip_check
        uses: fkirc/skip-duplicate-actions@v5
        with:
          concurrent_skipping: "same_content_newer"
  pre-commit:
    runs-on: ubuntu-latest
    needs: pre-job
    if: needs.pre-job.outputs.should_skip != 'true'
    steps:
      - uses: actions/checkout@v4
      - uses: cachix/install-nix-action@v31
        with:
          nix_path: nixpkgs=channel:nixos-unstable
      - uses: cachix/cachix-action@v16
        with:
          name: wires
          authToken: "${{ secrets.CACHIX_AUTH_TOKEN }}"
      - name: Build
        run: nix develop --print-build-logs -v --command pre-commit run --all-files
  nextest:
    runs-on: ubuntu-latest
    needs: pre-job
    if: needs.pre-job.outputs.should_skip != 'true'
    steps:
      - uses: actions/checkout@v4
      - uses: cachix/install-nix-action@v31
        with:
          nix_path: nixpkgs=channel:nixos-unstable
      - uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - uses: cachix/cachix-action@v16
        with:
          name: wires
          authToken: "${{ secrets.CACHIX_AUTH_TOKEN }}"
      - name: Nextest
        run: nix develop --print-build-logs -v --command cargo nextest run
  find-vm-tests:
    runs-on: ubuntu-latest
    needs: pre-job
    if: needs.pre-job.outputs.should_skip != 'true'
    outputs:
      tests: ${{ steps.find-tests.outputs.tests }}
    steps:
      - uses: actions/checkout@v4
      - uses: cachix/install-nix-action@v31
        with:
          nix_path: nixpkgs=channel:nixos-unstable
      - uses: cachix/cachix-action@v16
        with:
          name: wires
          authToken: "${{ secrets.CACHIX_AUTH_TOKEN }}"
      - name: find-tests
        id: tests
        run: |
          echo "tests=$(
            nix eval --impure --json --expr \
            'with builtins; filter ((import <nixpkgs>{}).lib.hasPrefix "nixos-vm-test") (attrNames (getFlake "${{ github.workspace }}").checks.x86_64-linux)'
          )" >> "$GITHUB_OUTPUT"
  vm-tests:
    runs-on: ubuntu-latest
    needs: find-vm-tests
    strategy:
      matrix:
        test: ${{ fromJSON(needs.find-vm-tests.outputs.tests) }}
    steps:
      - uses: actions/checkout@v4
      - uses: cachix/install-nix-action@v31
        with:
          nix_path: nixpkgs=channel:nixos-unstable
      - uses: cachix/cachix-action@v16
        with:
          name: wires
          authToken: "${{ secrets.CACHIX_AUTH_TOKEN }}"
      - name: Build
        run: nix build .#checks.x86_64-linux.${{ matrix.test }} --print-build-logs --impure
