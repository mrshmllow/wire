name: "PR Preview"
on:
  push:

jobs:
  get-pr:
    runs-on: ubuntu-latest

    outputs:
      number: ${{ steps.find-pr.outputs.number }}

    steps:
      - uses: jwalton/gh-find-current-pr@master
        id: find-pr
        with:
          state: all

  base-ref:
    runs-on: ubuntu-latest
    needs: get-pr

    outputs:
      base_ref: ${{ steps.base-ref.outputs.base_ref }}

    if: ${{ needs.get-pr.outputs.number != '' }}

    steps:
      - name: Locate Base Ref
        id: base-ref
        uses: actions/github-script@v7
        with:
          result-encoding: string
          script: |
            const pr = await github.rest.issues.get({
              issue_number: ${{ needs.get-pr.outputs.number }},
              owner: context.repo.owner,
              repo: context.repo.repo,
            });
            console.log(pr);

            return pr.data.base.ref;

  build-base:
    runs-on: ubuntu-latest
    needs: base-ref

    outputs:
      path: ${{ steps.path.outputs.path }}

    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ needs.check.outputs.base_ref }}
      - uses: cachix/install-nix-action@v27
        with:
          nix_path: nixpkgs=channel:nixos-unstable
      - uses: cachix/cachix-action@v14
        with:
          name: wires
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
      - run: nix build .#docs --print-out-paths
      - id: path
        run: echo "path=$(nix build .#docs --print-out-paths)" >> "$GITHUB_OUTPUT"

  build-head:
    runs-on: ubuntu-latest

    outputs:
      path: ${{ steps.path.outputs.path }}

    steps:
      - uses: actions/checkout@v4
      - uses: cachix/install-nix-action@v27
        with:
          nix_path: nixpkgs=channel:nixos-unstable
      - uses: cachix/cachix-action@v14
        with:
          name: wires
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
      - run: nix build .#docs --print-out-paths
      - id: path
        run: echo "path=$(nix build .#docs --print-out-paths)" >> "$GITHUB_OUTPUT"          

  deploy:
    runs-on: ubuntu-latest

    needs:
      - build-head
      - build-base
      - get-pr

    environment: 
      name: preview
      url: https://pr-${{ needs.get-pr.outputs.number }}.wire-docs.pages.dev/
    
    # skip if nothing changed in the docs package
    if: needs.build-head.outputs.path != needs.build-base.outputs.path

    steps:
      - uses: actions/checkout@v4
      - uses: cachix/install-nix-action@v27
        with:
          nix_path: nixpkgs=channel:nixos-unstable
      - uses: cachix/cachix-action@v14
        with:
          name: wires
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
      - run: nix build .#docs
      - name: Deploy to Cloudflare Pages
        id: deployment
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: pages deploy ./result/ --project-name wire-docs --branch pr-${{ needs.get-pr.outputs.number }}
